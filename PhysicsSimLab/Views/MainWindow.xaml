<Window x:Class="PhysicsSimLab.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PhysicsSimLab.Views"
        xmlns:vm="clr-namespace:PhysicsSimLab.ViewModels"
        xmlns:core="clr-namespace:PhysicsSimLab.Core"
        mc:Ignorable="d"
        Title="Physics Simulation Lab" Height="600" Width="1000">
    
    <Window.Resources>
        <ObjectDataProvider x:Key="SimulationTypeValues" 
                            MethodName="GetValues" 
                            ObjectType="{x:Type core:SimulationType}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="core:SimulationType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        
        <!-- Animation for sidebar -->
        <Style x:Key="SidebarStyle" TargetType="Grid">
            <Setter Property="Width" Value="250"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSidebarExpanded}" Value="False">
                    <Setter Property="Width" Value="30"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Toggle Button Style -->
        <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="Transparent" Padding="5">
                            <Grid>
                                <Path x:Name="ExpandIcon" 
                                      Data="M8,0 L0,8 L8,16" 
                                      Stroke="Black" 
                                      StrokeThickness="2" 
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"
                                      Visibility="Collapsed"/>
                                <Path x:Name="CollapseIcon" 
                                      Data="M0,0 L8,8 L0,16" 
                                      Stroke="Black" 
                                      StrokeThickness="2" 
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandIcon" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="CollapseIcon" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <!-- Menu -->
        <Menu Grid.Row="0" Grid.ColumnSpan="2">
            <MenuItem Header="File">
                <MenuItem Header="Exit" Click="ExitMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About" Click="AboutMenuItem_Click"/>
            </MenuItem>
        </Menu>
        
        <!-- Sidebar Container with Animation -->
        <Grid x:Name="SidebarContainer" 
              Grid.Row="1" 
              Grid.Column="0" 
              Style="{StaticResource SidebarStyle}">
            
            <!-- Use a nested grid to organize the sidebar content and toggle button -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <!-- Sidebar Content - Border removed -->
                <Border Grid.Row="0" BorderThickness="0">
                    <ScrollViewer VerticalScrollBarVisibility="Auto" 
                                 Visibility="{Binding IsSidebarExpanded, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel Margin="10">
                            <GroupBox Header="Simulation Type" Margin="0,0,0,10">
                                <ComboBox Margin="0,5,0,0" 
                                         ItemsSource="{Binding Source={StaticResource SimulationTypeValues}}"
                                         SelectedItem="{Binding SelectedSimulationType}"/>
                            </GroupBox>
                            
                            <GroupBox Header="Simulation Controls" Margin="0,0,0,10">
                                <StackPanel Margin="0,5,0,0">
                                    <Button Content="Start" Command="{Binding StartCommand}" Margin="0,0,0,5"/>
                                    <Button Content="Stop" Command="{Binding StopCommand}" Margin="0,0,0,5"/>
                                    <Button Content="Reset" Command="{Binding ResetCommand}"/>
                                </StackPanel>
                            </GroupBox>
                            
                            <GroupBox Header="Projectile Motion Parameters" 
                                     Visibility="{Binding SelectedSimulationType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static core:SimulationType.ProjectileMotion}}">
                                <StackPanel Margin="0,5,0,0">
                                    <TextBlock Text="Initial Height (m):"/>
                                    <Slider Minimum="0" Maximum="100" Value="{Binding InitialHeight}" TickFrequency="10" TickPlacement="BottomRight"/>
                                    <TextBlock Text="{Binding InitialHeight, StringFormat='{}{0:F1}'}"/>
                                    
                                    <TextBlock Text="Initial Velocity (m/s):" Margin="0,10,0,0"/>
                                    <Slider Minimum="0" Maximum="50" Value="{Binding InitialVelocity}" TickFrequency="5" TickPlacement="BottomRight"/>
                                    <TextBlock Text="{Binding InitialVelocity, StringFormat='{}{0:F1}'}"/>
                                    
                                    <TextBlock Text="Launch Angle (degrees):" Margin="0,10,0,0"/>
                                    <Slider Minimum="0" Maximum="90" Value="{Binding LaunchAngle}" TickFrequency="15" TickPlacement="BottomRight"/>
                                    <TextBlock Text="{Binding LaunchAngle, StringFormat='{}{0:F1}'}"/>
                                </StackPanel>
                            </GroupBox>
                            
                            <GroupBox Header="Planetary Orbit Parameters" 
                                     Visibility="{Binding SelectedSimulationType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static core:SimulationType.PlanetaryOrbit}}">
                                <StackPanel Margin="0,5,0,0">
                                    <TextBlock Text="Planet Mass (kg):"/>
                                    <TextBox Text="{Binding PlanetMass, StringFormat='{}{0:E2}'}" Margin="0,0,0,5"/>
                                    
                                    <TextBlock Text="Satellite Mass (kg):"/>
                                    <TextBox Text="{Binding SatelliteMass, StringFormat='{}{0:E2}'}" Margin="0,0,0,5"/>
                                    
                                    <TextBlock Text="Orbit Radius (m):"/>
                                    <TextBox Text="{Binding OrbitRadius, StringFormat='{}{0:E2}'}" Margin="0,0,0,5"/>
                                    
                                    <TextBlock Text="Orbit Velocity (m/s):"/>
                                    <TextBox Text="{Binding OrbitVelocity, StringFormat='{}{0:F1}'}" Margin="0,0,0,5"/>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </ScrollViewer>
                </Border>
                
                <!-- Toggle Button at the bottom - Border removed -->
                <Border Grid.Row="1" BorderThickness="0">
                    <ToggleButton Width="20" 
                                 Height="20" 
                                 HorizontalAlignment="Right" 
                                 Margin="0,5,5,5" 
                                 IsChecked="{Binding IsSidebarExpanded}" 
                                 Style="{StaticResource ToggleButtonStyle}"/>
                </Border>
            </Grid>
        </Grid>
        
        <!-- Simulation View - Border removed -->
        <Border Grid.Row="1" Grid.Column="1" BorderThickness="0" Margin="10">
            <Canvas x:Name="SimulationCanvas" Background="LightBlue" ClipToBounds="True">
                <ItemsControl ItemsSource="{Binding SimulationObjects}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding X, Converter={StaticResource ScaleConverter}}"/>
                            <Setter Property="Canvas.Bottom" Value="{Binding Y, Converter={StaticResource ScaleConverter}}"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Ellipse Width="{Binding Radius, Converter={StaticResource ScaleConverter}}" 
                                        Height="{Binding Radius, Converter={StaticResource ScaleConverter}}" 
                                        Fill="Red" Stroke="Black" StrokeThickness="1"
                                        Canvas.Left="{Binding X}"
                                        Canvas.Bottom="{Binding Y}"/>
                                <TextBlock Text="{Binding Name}" 
                                          Canvas.Left="{Binding X}" 
                                          Canvas.Bottom="{Binding Y}"
                                          Margin="0,0,0,10"/>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Canvas>
        </Border>
    </Grid>
</Window>
